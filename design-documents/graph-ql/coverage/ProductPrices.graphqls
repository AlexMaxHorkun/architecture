interface ProductInterface{
    ...
    price: ProductPrices @deprecated (use price_range)
    price_range: PriceRange!
    tier_price: Float @deprecated (use tier_prices)
    tier_prices: [ProductTierPrices]
    ...
}

type ProductPrices { @deprecated (use PriceRange)
    minimalPrice: @deprecated
    maximalPrice: @deprecated
    regularPrice: @deprecated
}

type ProductTierPrices {
    customer_group_id: String
    qty: Float
    value: Float @deprecated (use final_price)
    final_price: Money
    percentage_value: Float @deprecated (use discount)
    discount: ItemDiscount
    website_id: Float
}

type PriceRange{
    minimum_price : ProductPrice!
    maximum_price : ProductPrice
}

type ProductPrice{
    regular_price : Price!
    final_price : Price!
    discount : ItemDiscount
}

type ProductDiscount{
    percent_off : Float
    amount_off : Float
}

#No changes, just for reference

type Price @doc(description: "The Price object defines the price of a product as well as any tax-related adjustments.") {
    amount: Money @doc(description: "The price of a product plus a three-letter currency code.")
    adjustments: [PriceAdjustment] @doc(description: "An array that provides information about tax, weee, or weee_tax adjustments.")
}

type Money{
    value : Float!
    currency : Currency!
}
