type Query {
   category (
   id: Int @doc(description: "Id of the category.")

   # added Category filter input.
   filter: CategoryFilterInput @doc(description: "Identifies which Category filter inputs to search for and return.")
   ): CategoryTree
    @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\CategoryTree") @doc(description: "The category query searches for categories that match the criteria specified in the search and filter attributes.") @cache(cacheIdentity: "Magento\\CatalogGraphQl\\Model\\Resolver\\Category\\CategoryTreeIdentity")
}

# added CategoryFilterInput with id, url_key and name as input filters.

input CategoryFilterInput @doc(description: "CategoryFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.") {
    id: FilterEqualTypeInput @doc(description: "Filter by category ID that uniquely identifies and filters the category."),
    url_key: FilterEqualTypeInput @doc(description: "Filter by the part of the URL that identifies the category"),
    name: FilterEqualTypeInput @doc(description: "Filter by the display name of the category.")
}

type CategoryTree implements CategoryInterface @doc(description: "Category Tree implementation.") {
    children: [CategoryTree] @doc(description: "Child categories tree.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\CategoryTree")
}
